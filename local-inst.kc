# void type
Unit
	Unit

# cstdinclude includes the module if the type is used. it will also enclose the name in "<" and ">" - that's because I might want to include custom c modules.
#[ctype 'bool', cstdinclude 'stdbool.h']
Bool
	#[clit 'false']
	False

	#[clit 'true']
	True

# Temporary, as I will use 'U32', 'I32', etc. types in code and there will be no "default" Int
#[ctype 'int']
Int  # Make sure this is parsed as DataDefinition with zero constructors instead of ExprType in the compiler.

#[ctype 'float']
Float

class A
	do-sth (x _) -> Unit

inst A Int
	do-sth (x Int) -> Unit
		print x
		return


outer-const = 420
f ()
	bool-const = 10
	g()
		h-const = 69
		h()
			boop-const = Unit
			inst A Bool
				do-sth (x Bool) -> Unit
					print bool-const
					print outer-const
					print h-const
					print boop-const
					if x
						print 1
					else
						print 0
					return

			do-sth(True)
			return
		h()
		return
	g()
	return

f()
