
# void type
Unit
	Unit

# cstdinclude includes the module if the type is used. it will also enclose the name in "<" and ">" - that's because I might want to include custom c modules.
#[ctype 'bool', cstdinclude 'stdbool.h']
Bool
	#[clit 'false']
	False

	#[clit 'true']
	True

# Temporary, as I will use 'U32', 'I32', etc. types in code and there will be no "default" Int
#[ctype 'int']
Int  # Make sure this is parsed as DataDefinition with zero constructors instead of ExprType in the compiler.

id (x)
	return x

uni (l asd, r asd)
	return

nuttin ()
	print 123
	return

ff = nuttin

f (x a) -> Unit
	g (y b) -> Unit
		printn ()
			print x
			print y
			return

		ff <= printn
		return

	g(Unit)
	g(420)
	return

f(Unit)
f(420)
f(True)
print 69420
