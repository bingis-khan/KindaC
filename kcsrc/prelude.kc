
# cstdinclude includes the module if the type is used. it will also enclose the name in "<" and ">" - that's because I might want to include custom c modules.
#[ctype 'bool', cstdinclude 'stdbool.h']
Bool
	#[clit 'false']
	False

	#[clit 'true']
	True

# Temporary, as I will use 'U32', 'I32', etc. types in code and there will be no "default" Int
#[ctype 'int']
Int  # Make sure this is parsed as DataDefinition with zero constructors instead of ExprType in the compiler.

Maybe a
	Just a
	Nothing

## Test functions
#fib (n)
#	if n == 0
#		return 0
#	elif n == 1
#		return 1
#	else
#		return fib(n - 2) + fib(n - 1)
