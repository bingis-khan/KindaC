
fun (f a -> a, x a) -> a
    return f(x)

funny (x Int)
    return y: x + y

wut (which Bool)
    if which
        return x: x + 1
    else
        return x: x - 1

main ()
    # Basic
    lambda = x: x + 1
    withParens = (x: (x * 69))
    x = fun(x: x + 420, 69)
    # With args
    argful = x, y, z: x + y - z
    argless = : 69

    # Environment
    e = 123
    e' = 420
    envLambda = x: e + x + e'

    # Nested lambdas
    nested = x: y: x + y
    nested' = x: y: z: x + y + z